name: Playwright Tests

on:
  push:
    branches: [ master ]
  pull_request:
    branches: 
      - master
  workflow_dispatch:
    inputs:
      update_snapshots:
        description: "Set to true to update snapshots"
        required: false
        default: "false"

permissions:
    contents: write
    
jobs:
  Install_Dependencies:
    timeout-minutes: 60
    runs-on: ubuntu-latest
    steps:
    - name: Checkout
      uses: actions/checkout@v4
      with:
        ref: ${{ github.head_ref}}

    - uses: actions/setup-node@v4
      with:
        node-version: lts/*

    - name: Install dependencies
      run: npm ci --force

    - name: Install Playwright Browsers
      run: npx playwright install --with-deps --force
  Run-Tests:
    timeout-minutes: 60
    runs-on: ubuntu-latest
    needs: Install_Dependencies
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          ref: ${{ github.head_ref}}

      - name: Check for Snapshot Updaete Request
        id: check-update
        run: echo "update_snapshots=${{ github.event.inputs.update_snapshots }}" >> $GITHUB_ENV
      
      - name: Run Playwright tests
        run: |
          if [ "$update_snapshots" == "true" ]; then
            echo "Updating snapshots in CI..."
            npm run pageObjects-chrome -- --update-snapshots
          else
            echo "Running tests against existing snapshots..."
            npm run pageObjects-chrome
          fi

      - name: Upload playwright artifact
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: playwright-report
          path: playwright-report/
          retention-days: 30
      
      # - name: Upload Updateed Snapshot
      #   if: ${{ github.event.inputs.update_snapshots == 'true' }}
      #   uses: actions/upload-artifact@v4
      #   with:
      #     name: updated-snapshots
      #     path: ./screenshots/

      - name: Configure git
        if: ${{ github.event.inputs.update_snapshots == 'true' }}
        run: |
          git config --global user.email "github-actions[bot]@users.noreply.github.com"
          git config --global user.name "github-actions[bot]"

      - name: Commit updates snapshots
        if: ${{ github.event.inputs.update_snapshots == 'true' }}
        run: |
          git add .
          git commit -m "Update snapshots"

      - name: Push changes
        if: ${{ github.event.inputs.update_snapshots == 'true' }}
        run: git push origin ${{ github. head_ref }}

    

          